{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAQd,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,8BAAKA,EAAL,WCJEO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDV,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAyBvC,OAlBDC,qBAAW,WAEVxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SASvB,CAACpB,IAEIqB,EDrBuBK,CAAc1B,GAAjCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAanB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OACCoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAChB,qBAAKA,UAAU,YAAf,SAGOH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEzBhBgB,EAAe,WAAM,IAAD,EAGKzC,mBAAS,CAAC,iBAHf,mBAGxB0C,EAHwB,KAGZ3C,EAHY,KAO/B,OAEK,qCACG,gDAEA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,uBAGA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAYA,GADLA,Y,MChBzB6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.1e5f3dd3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n         \r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length >2) {\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    return (        \r\n            <form onSubmit = {handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value = {inputValue}\r\n                    onChange = {handleInputChange}\r\n                />\r\n            </form>\r\n               \r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n\r\n}\r\n\r\n","\r\nexport const getGifs = async(category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5g4WAEfOGNj4rwnfADeXr2Xtp8Txl5oU`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map ( img => {\r\n        return { \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url \r\n\r\n        }\r\n    } )\r\n\r\n  \r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src= {url} alt={title}/>\r\n           <p>{ title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   \r\n   const {data:images, loading} = useFetchGifs (category);\r\n\r\n    /* LO MUEVO AL HOOK USEFETCHGIFTS */ \r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //    // .then( imgs => setImages(imgs));\r\n    //    .then( setImages);//cuando el argumento de la funcion se manda como argumento a la otra func se puede dejar asi\r\n       \r\n    // }, [category]) //solo se ejectua si la categoria cambia\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h4 className=\"animate__animated animate__fadeIn\"> {category} </h4>\r\n            {loading && <i className=\"animate__animated animate__flash\">Loading</i> }\r\n        <div className=\"card-grid\">\r\n            \r\n               {\r\n               images.map(img  => (\r\n                  <GifGridItem \r\n                  key = {img.id}\r\n                    {...img} \r\n                  />\r\n               )) \r\n               } \r\n                    \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport  const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n   useEffect( () => {\r\n\r\n    getGifs(category)\r\n        .then(imgs => {\r\n           \r\n                setState({ \r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n           \r\n            \r\n        })\r\n        \r\n       \r\n\r\n\r\n   }, [category])\r\n\r\n    return state;\r\n\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport {AddCategory } from \"./components/AddCategory\"; \r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n  \r\n  const [categories, setCategories] = useState(['Los Simpsons']);\r\n\r\n  \r\n  \r\n  return (\r\n\r\n       <>\r\n          <h2>Gif Expert App</h2>\r\n\r\n          <AddCategory setCategories = {setCategories}/>\r\n\r\n          <hr />\r\n\r\n\r\n          <ol>\r\n            {\r\n              categories.map( category =>  \r\n                <GifGrid \r\n                  key = {category}\r\n                  category = {category}\r\n                />  \r\n              ) \r\n            }\r\n          </ol>\r\n\r\n\r\n      </>\r\n  );\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}